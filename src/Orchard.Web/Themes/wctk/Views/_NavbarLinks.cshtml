@using ToolkitPath
@using Orchard.Environment.Configuration;
@{
    var isLoggedIn = Request.IsAuthenticated && User.Identity is System.Security.Principal.GenericIdentity;
    var appConfigAccessor = new AppConfigurationAccessor();
    var basePath = appConfigAccessor.GetConfiguration("ToolkitBasePath");
    var basePathHome = appConfigAccessor.GetConfiguration("ToolkitBasePathHome");
    var identityProviderPath = appConfigAccessor.GetConfiguration("IdentifyProviderPath");
    var rpssPath = appConfigAccessor.GetConfiguration("RPSSUrl");

    var url = Request.RawUrl;

    if (isLoggedIn && (url == "/" || url == "/?AspxAutoDetectCookieSupport=1" || url.StartsWith("/?gatewayResponse=true") == true))
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "MyHome"));
    }
    else if (url.ToLower().StartsWith("/dashboards-reports") == true || url.ToLower().StartsWith("//dashboards-reports") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/Dashboards"));
    }
    else if (url.ToLower().StartsWith("/low-voltage-system") == true || url.ToLower().StartsWith("//low-voltage-system") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/ITFRCS"));
    }
    else if (url.ToLower().StartsWith("/knowledge-center") == true || url.ToLower().StartsWith("//knowledge-center") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/knowledge_center"));
    }
    else if (url.ToLower().StartsWith("/bim-training-videos") == true || url.ToLower().StartsWith("//bim-training-videos") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/bim_training_videos"));
    }
    else if (url.ToLower().StartsWith("/bim-for-the-mhs") == true || url.ToLower().StartsWith("//bim-for-the-mhs") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/bim_for_the_mhs"));
    }
    else if (url.ToLower().StartsWith("/dmlss-fm-video-training") == true || url.ToLower().StartsWith("//dmlss-fm-video-training") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/DMLSS_FM_Video_Training"));
    }
    else if (url.ToLower().StartsWith("/energy-management-sustainability-in-the-mhs") == true || url.ToLower().StartsWith("//energy-management-sustainability-in-the-mhs") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/energy_management_sustainability_in_the_mhs"));
    }
    else if (url.ToLower().StartsWith("/facility-life-cycle-management-flcm") == true || url.ToLower().StartsWith("//facility-life-cycle-management-flcm") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/facility_life_cycle_management_flcm"));
    }
    else if (url.ToLower().StartsWith("/facility-management-operations-fm-ops-landing-page") == true || url.ToLower().StartsWith("//facility-management-operations-fm-ops-landing-page") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/facility_management_operations_fm_ops_landing_page"));
    }
    else if (url.ToLower().StartsWith("/dmlss-fm_roadmap") == true || url.ToLower().StartsWith("//dmlss-fm_roadmap") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/DMLSS_FM_Roadmap"));
    }
    else if (url.ToLower().StartsWith("/dmlss-fm") == true || url.ToLower().StartsWith("//dmlss-fm") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/dmlss_fm"));
    }
    else if (url.ToLower().StartsWith("/space-equipment-planning-system-seps") == true || url.ToLower().StartsWith("//space-equipment-planning-system-seps") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/space_equipment_planning_system_seps"));
    }
    else if (url.ToLower().StartsWith("/military-standard-milstd-1691-equipment") == true || url.ToLower().StartsWith("//military-standard-milstd-1691-equipment") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/military_standard_milstd_1691_equipment"));
    }
    else if (url.ToLower().StartsWith("/dha-facilities-division") == true || url.ToLower().StartsWith("//dha-facilities-division") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/dha_facilities_division"));
    }
    else if (url.ToLower().StartsWith("/adminsupport") == true || url.ToLower().StartsWith("//adminsupport") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/AdminSupport"));
    }
    else if (url.ToLower().StartsWith("/visitor-instructions") == true || url.ToLower().StartsWith("//visitor-instructions") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/visitor_instructions"));
    }
    else if (url.ToLower().StartsWith("/real-property-management") == true || url.ToLower().StartsWith("//real-property-management") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/real_property_management"));
    }
    else if (url.ToLower().StartsWith("/dmlss-logicole-management") == true || url.ToLower().StartsWith("//dmlss-logicole-management") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/dmlss_logicole_management"));
    }
    else if (url.ToLower().StartsWith("/frequently-asked-questions") == true || url.ToLower().StartsWith("//frequently-asked-questions") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/frequently_asked_questions"));
    }
    else if (url.ToLower().StartsWith("/how-to-use-this-site") == true || url.ToLower().StartsWith("//how-to-use-this-site") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/how_to_use_this_site"));
    }
    else if (url.ToLower().StartsWith("/security-roles") == true || url.ToLower().StartsWith("//security-roles") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/security_roles"));
    }
    else if (url.ToLower().StartsWith("/user-guides-knowledge-center") == true || url.ToLower().StartsWith("//user-guides-knowledge-center") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/user_guides_knowledge_center"));
    }
    else if (url.ToLower().StartsWith("/user-guides-project-tool") == true || url.ToLower().StartsWith("//user-guides-project-tool") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/user_guides_project_tool"));
    }
    else if (url.ToLower().StartsWith("/user-guides-world-class-checklist") == true || url.ToLower().StartsWith("//user-guides-world-class-checklist") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/user_guides_world_class_checklist"));
    }
    else if (url.ToLower().StartsWith("/user-guides-cidm") == true || url.ToLower().StartsWith("//user-guides-cidm") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/user_guides_cidm"));
    }
    else if (url.ToLower().StartsWith("/website-notices-policies-disclaimers") == true || url.ToLower().StartsWith("//website-notices-policies-disclaimers") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/website_notices_policies_disclaimers"));
    }
    else if (url.ToLower().StartsWith("/document-posting-restrictions") == true || url.ToLower().StartsWith("//document-posting-restrictions") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/document_posting_restrictions"));
    }
    else if (url.ToLower().StartsWith("/support-availability") == true || url.ToLower().StartsWith("//support-availability") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/support_availability"));
    }
    else if (url.ToLower().StartsWith("/contracting-dha-facilities-division") == true || url.ToLower().StartsWith("//contracting-dha-facilities-division") == true)
    {
        Response.Redirect(string.Format("{0}{1}", basePath, "/Content/Contracting"));
    }
    else if (url.ToLower().StartsWith("/registration-instructions") == true || url.ToLower().StartsWith("//registration-instructions") == true)
    {
        Response.Redirect("@identityProviderPath");
    }
}
<ul class="nav navbar-nav">
    <li id="nav-home"><a href="@Url.Action("Index", "Home", new { area = "" })">Home</a></li>
    <li>
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Knowledge Center<b class="caret"></b></a>
        <ul class="dropdown-menu multi-level">
            <li><a href="@string.Format("{0}{1}", basePathHome, "/knowledge-center")">Overview</a></li>
            <li><a href="@string.Format("{0}{1}", basePath, "/repository")">Resources/Documents</a></li>
            <li class="menu-item dropdown dropdown-submenu">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Additional Resources</a>
                <ul class="dropdown-menu multi-level">
                    <li><a href="@string.Format("{0}{1}", basePath, "/Content/CSM")">Capital Strategy Management (CSM) Branch</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/bim-training-videos")">BIM Training Videos</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/bim-for-the-mhs")">Building Information Modeling (BIM)</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Content/Contracting")">Contracting DHA Facilities Enterprise</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/DMLSS-FM-Video-Training")">Defense Medical Logistics Standard Support - Training Videos</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/energy-management-sustainability-in-the-mhs")">Energy Management & Sustainability in the MHS</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/facility-life-cycle-management-flcm")">Facility Life Cycle Management (FLCM)</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/facility-management-operations-fm-ops-landing-page")">Facility Management Operations (FM Ops) Landing Page</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/dmlss-fm")">Defense Medical Logistics Standard Support - Facility Management (DMLSS-FM)</a></li>
                    <li><a href="https://dha.max.gov/milstd1691" target="_blank">Military Standard (MILSTD) 1691 Equipment</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/space-equipment-planning-system-seps")">Space & Equipment Planning System (SEPS)</a></li>
                    <li><a href="http://www.wbdg.org/ccb/browse_cat.php?c=261" target="_blank">DoD Space Planning Criteria (SPC) for Health Facilities</a></li>
                    <li><a href="https://www.wbdg.org/ffc/dod/mhs-templates" target="_blank">Military Health System (MHS) Templates</a></li>
                    <li><a href="http://www.wbdg.org/ffc/dod/unified-facilities-criteria-ufc/ufc-4-510-01" target="_blank">Unified Facilities Criteria (UFC) 4-510-01 Design</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/dha-facilities-division")">DHA Facilities Enterprise</a></li>
                    <li><a href="@string.Format("{0}{1}", basePathHome, "/visitor-instructions")">DHHQ Visitor Instructions</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Content/ITFRCS")">IT/Facility Related Control Systems (FRCS)</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Accreditation")">Accreditation</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Content/DCA")">DCA Branch</a></li>
                </ul>
            </li>
        </ul>
    </li>
    <li>
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Tools<b class="caret"></b></a>
        <ul class="dropdown-menu multi-level">
            <li class="menu-item dropdown dropdown-submenu">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown"><b>World Class Checklist</b></a>
                <ul class="dropdown-menu multi-level">
                    <li><a href="@string.Format("{0}{1}", basePath, "/Checklist")" class="dropdown-toggle" role="button" aria-expanded="true">Checklist Landing</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/checklist/viewall")">Browse Checklists</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Checklist/Strategy")">Strategy Info</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Checklist/StrategyReport")">Strategy Report</a></li>
                </ul>
            </li>

            <li class="menu-item dropdown dropdown-submenu">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown"><b>CIDM</b></a>
                <ul class="dropdown-menu">
                    <li><a href="@string.Format("{0}{1}", basePath, "/CIDM")" class="dropdown-toggle" role="button" aria-expanded="true">CIDM Landing</a>
                    <li><a href="@string.Format("{0}{1}", basePath, "/CIDM/Events")">CIDM Events</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/CIDM/Artifacts")">Artifact Designer</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/CIDM/History")">CIDM Archive</a></li>
                </ul>
            </li>

            <li class="menu-item dropdown dropdown-submenu">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown"><b>Project Tool</b></a>
                <ul class="dropdown-menu">
                    <li><a href="@string.Format("{0}{1}", basePath, "/Project")" class="dropdown-toggle" role="button" aria-expanded="false">Projects Landing</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/project/viewall")">View Projects</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Project/CreateFacility")">Create Facility Project Folder</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Project/CreateWorkingFolder")">Create Working Folder</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Project/CreateContract")">Create Contract Folder</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/ProjectTeam/ByTeam")">Manage Teams by Project</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/ProjectTeam/ByUser")">Manage Teams by User</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Repository/Projects")">View/Edit Documents</a></li>
                </ul>
            </li>

            <li><a href="@rpssPath" class="dropdown-toggle" target="_blank"><b>RPSS</b></a></li>
        </ul>
    </li>
    <li>
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Real Property Management<b class="caret"></b></a>
        <ul class="dropdown-menu multi-level">
            <li><a href="@string.Format("{0}{1}", basePathHome, "/real-property-management")">Real Property Management</a></li>
            <li><a href="@string.Format("{0}{1}", basePathHome, "/dmlss-logicole-management")">DMLSS/LogiCole Management</a></li>
            <li><a href="@string.Format("{0}{1}", basePathHome, "/dashboards-reports")">Dashboards/Reports</a></li>
        </ul>
    </li>
    <li>
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Help<b class="caret"></b></a>
        <ul class="dropdown-menu multi-level">
            <li><a href="@string.Format("{0}{1}", basePathHome, "/frequently-asked-questions")">Frequently Asked Questions</a></li>
            <li><a href="@string.Format("{0}{1}", basePathHome, "/website-notices-policies-disclaimers")">Website Notices, Policies &amp; Disclaimers</a></li>
            <li><a href="@string.Format("{0}{1}", basePathHome, "/how-to-use-this-site")">How To Use This Site</a></li>
            <li><a href="@string.Format("{0}{1}", basePathHome, "/support-availability")">Support Availability</a></li>
        </ul>
    </li>
</ul>

<ul class="nav navbar-nav navbar-right">
    @if (isLoggedIn)
    {
        var Claims = new List
        <System.Security.Claims.Claim>
            ((User.Identity as System.Security.Principal.GenericIdentity).Claims);
        if (Claims[2].Value == "True")
        {
            <li id="ticket-counter" target="@string.Format("{0}{1}", basePath, "/Support/TicketSummaryJsonp")">
                <a href="@Html.ToolkitPath("/Support/Tickets")">
                    <i class="fa fa-fw fa-envelope"></i>
                    <span class="badge" data-bind="text: newMessages"></span>
                </a>
            </li>
        }
        <li>
            <a href="@string.Format("{0}{1}", basePath, "/Account")">@(Claims[1].Value)</a>
        </li>

        if (Claims[2].Value == "True")
        {
            <li>
                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Admin<b class=""></b></a>
                <ul class="dropdown-menu multi-level">
                    <li><a href="@string.Format("{0}{1}", basePath, "/Admin")">View Users</a></li>

                    <li class="dropdown-submenu">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Support Email</a>
                        <ul class="dropdown-menu pull-right" style="width:12em;">
                            <li><a href="@string.Format("{0}{1}", basePath, "/Admin/Compose")">Compose Email</a></li>
                            <li><a href="@string.Format("{0}{1}", basePath, "/Admin/SupportEmail")">Update System Email</a></li>
                            <li><a href="@string.Format("{0}{1}", basePath, "/CannedResponse/Index")">Canned Responses</a></li>
                            <li><a href="@string.Format("{0}{1}", basePath, "/Support/Tickets")">Support System Mailbox</a></li>
                        </ul>
                    </li>

                    <li><a href="@string.Format("{0}{1}", basePath, "/Reindex")">Rebuild Document Index</a></li>
                    <li><a href="@string.Format("{0}{1}", basePath, "/Lookup/OrgType")">Lookups</a></li>
                    <li class="dropdown-submenu">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Reports</a>
                        <ul class="dropdown-menu">
                            <li><a href="@string.Format("{0}{1}", basePath, "/Report/Activity")">Activity Report</a></li>
                            <li><a href="@string.Format("{0}{1}", basePath, "/Report/Errors")">Error Report</a></li>
                            <li><a href="@string.Format("{0}{1}", basePath, "/Report/Email")">Email Report</a></li>
                            <li>@Html.ActionLink("Notification Report", "FollowNotifyEmail", "Report", new { area = "" }, new { })</li>
                        </ul>
                    </li>
                </ul>
            </li>
        }
        <li class="btn btn-primary btn-xs">
            <a href="@string.Format("{0}{1}", basePathHome, "/Users/Account/Logoff")">Log Off</a>
        </li>
    }
    else
    {
        <li class="btn btn-primary btn-xs">
			<a href="@string.Format("{0}{1}", basePath, "/Account/Login")">Sign In</a>
		</li>
		<li class="btn btn-register btn-xs">
			<a href="@identityProviderPath">Request Access</a>
		</li>
    }
</ul>
